find_program(GENCPP_BIN genmsg_cpp.py)

message(STATUS "GENCPP_BIN found at ${GENCPP_BIN}")

# Generate .msg->.h for cpp
# List of all generated .h files should be saved in ALL_GEN_OUTPUT_FILES_cpp
macro(_generate_msgs_cpp ARG_PKG ARG_IFLAGS ARG_MSG_DEPS ARG_MESSAGES ARG_GEN_OUTPUT_DIR)

  set(ALL_GEN_OUTPUT_FILES_cpp "")
  foreach(msg ${ARG_MESSAGES})
    
    #Create input and output filenames
    get_filename_component(MSG_SHORT_NAME ${msg} NAME_WE)
    set(MSG_INPUT_FILE ${CMAKE_CURRENT_BINARY_DIR}/${msg})

    set(MSG_GENERATED_NAME ${MSG_SHORT_NAME}.h)
    set(GEN_OUTPUT_FILE ${ARG_GEN_OUTPUT_DIR}/${MSG_GENERATED_NAME})

    add_custom_command(OUTPUT ${GEN_OUTPUT_FILE}
      DEPENDS ${GENCPP_BIN} ${MSG_INPUT_FILE} ${ARG_MSG_DEPS}
      COMMAND ${GENCPP_BIN} ${MSG_INPUT_FILE}
      -p ${ARG_PKG}
      -o ${ARG_GEN_OUTPUT_DIR}
      ${ARG_IFLAGS}
      COMMENT "Generating C++ code from ${ARG_PKG}/${MSG_SHORT_NAME}"
      )

    list(APPEND ALL_GEN_OUTPUT_FILES_cpp ${GEN_OUTPUT_FILE})
  endforeach()

endmacro()

macro(generate_msgs_cpp PKG)
  parse_arguments(PKG "MESSAGES;DEPENDENCIES" "" ${ARGN})
  


endmacro()